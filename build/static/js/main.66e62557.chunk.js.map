{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishQuiz/FinishQuizList/FinishQuizList.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","components/FinishQuiz/FinishQuiz.module.css","components/FinishQuiz/FinishQuizList/FinishQuizListItem/FinishQuizListItem.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","containers/QuizList/QuizList.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/FinishQuiz/FinishQuizList/FinishQuizListItem/FinishQuizListItem.js","components/UI/Button/Button.js","components/FinishQuiz/FinishQuizList/FinishQuizList.js","components/FinishQuiz/FinishQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/FormLibrary.js","store/actions/createQuiz.js","containers/QuizCreator/QuizCreator.js","containers/QuizList/QuizList.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/createQuiz.js","store/reducers/auth.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","onBackdropClick","links","to","label","exact","comparesObj","array","obj1","isCompered","forEach","obj","obj2","JSON","stringify","compareObj","Drawer","onClickLinkHandler","map","link","index","key","activeClassName","active","store","getState","auth","signIn","this","close","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","backDropClickHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","i","ActiveQuiz","Question","answerNumber","question","quizLength","FinishQuizListItem","iconCls","Button","type","disabled","FinishQuizList","rightAnswer","quiz","results","length","onRetryClick","FinishQuiz","Loader","center","axios","create","baseURL","quizSetState","answerState","fetchQuizesSuccess","quizes","fetchQuizSuccess","fetchQuizesError","error","Quiz","fetchQuizeById","match","params","onRetryClickHandler","activeQuestion","isFinished","onAnswerClickHandler","QuizWrapper","isLoading","checkQuizIsFinish","connect","dispatch","quizId","a","get","data","Object","keys","answerId","rightAnswerId","timeout","window","setTimeout","isQuizFinish","clearTimeout","isInvalid","valid","touched","shouldValidate","Input","htmlFor","Type","Math","random","invalid","required","value","placeholder","onChange","errorMessage","onChangeInputHandler","event","controlName","formControls","control","target","validation","isValid","trim","email","test","String","toLowerCase","minLength","validateControl","isFormValid","name","authChangeInput","fetchError","authLoginClick","Auth","onSubmitFormHandler","preventDefault","Boolean","AuthForm","onSubmit","renderInputs","onClickLoginHandler","onClickRegisterHandler","password","authData","returnSecureToken","post","response","API_KEY","responseSignIn","Select","onChangeSelect","options","option","createControl","config","onClickAddQuestionHandler","createQuiz","option1","option2","option3","option4","questionItem","clickAddQuestion","validate","changeInput","validateForm","QuizCreator","Fragment","select","onChangeSelectHandler","onClickCreateQuizHandler","console","log","QuizList","fetchQuizes","renderQuizes","App","path","component","location","hostname","initialState","createOptionControl","number","initFormControl","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","ReduxThunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.66e62557.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__D3W2b\",\"close\":\"Drawer_close__2BILG\",\"active\":\"Drawer_active__2Id_V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__1RpwB\",\"open\":\"MenuToggle_open__1LYWj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2xzw9\",\"QuizWrapper\":\"Quiz_QuizWrapper__2p0nL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1V_ug\",\"Question\":\"ActiveQuiz_Question__1rVb8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__XpXyE\",\"success\":\"AnswerItem_success__25q7T\",\"error\":\"AnswerItem_error__2FYBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishQuizList\":\"FinishQuizList_FinishQuizList__3CTvX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Z_jye\",\"error\":\"Button_error__1Kkoy\",\"success\":\"Button_success__3z_6J\",\"primary\":\"Button_primary__IHUVe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__Q82M8\",\"center\":\"Loader_center__1ucAy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__qOVBR\",\"AuthForm\":\"Auth_AuthForm__1w6JY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__eLW68\",\"invalid\":\"Input_invalid__2DQap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3bwnF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1wGXt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__x30xz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishQuiz\":\"FinishQuiz_FinishQuiz__2jMc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishQuizListItem\":\"FinishQuizListItem_FinishQuizListItem__1H7j5\",\"success\":\"FinishQuizListItem_success__2ekiE\",\"error\":\"FinishQuizListItem_error__1XHkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__25aQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__3xX4Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__2IocT\"};","import React from 'react'\r\nimport classes from './MenuToggle.module.css';\r\n\r\nconst MenuToggle  = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa'\r\n    ]\r\n\r\n    if(props.isOpen) {\r\n        cls.push('fa-times');\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars');\r\n    }\r\n\r\n    return (\r\n        <i \r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst Backdrop = props =>  <div className={classes.Backdrop} onClick={props.onBackdropClick} />\r\n    \r\n\r\n\r\nexport default Backdrop;","import React, { Component } from 'react';\r\nimport classes from './Drawer.module.css';\r\nimport Backdrop from './../../UI/Backdrop/Backdrop';\r\nimport {NavLink} from 'react-router-dom';\r\nimport { store } from './../../../index';\r\n\r\nconst links = [\r\n    {\r\n        to: '/',\r\n        label: 'Cписок',\r\n        exact: true,\r\n    },\r\n    {\r\n        to: '/auth',\r\n        label: 'Авторизация',\r\n        exact: false,\r\n    }\r\n]\r\n\r\nfunction compareObj(obj1, obj2) {\r\n    return JSON.stringify(obj1) === JSON.stringify(obj2)\r\n}\r\n\r\nfunction comparesObj(array, obj1) {\r\n    let isCompered  = false;\r\n\r\n    array.forEach((obj) => {\r\n        if(compareObj(obj, obj1)) {\r\n            isCompered = true;\r\n        }\r\n    });\r\n\r\n    return isCompered\r\n}\r\n\r\n\r\nclass Drawer extends Component {\r\n    renderLinks() {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink \r\n                    to={link.to} \r\n                    exact={link.exact} \r\n                    activeClassName={classes.active}\r\n                    onClick={this.onClickLinkHandler}\r\n                    >{link.label}</NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    onClickLinkHandler = () => {\r\n        this.props.onBackdropClick();\r\n    }\r\n\r\n\r\n    render() {\r\n        const link = {\r\n            to: '/quiz-creator',\r\n            label: 'Создать тест',\r\n            exact: false,\r\n        }\r\n\r\n        if(store.getState().auth.signIn && !comparesObj(links, link)) {\r\n            links.push(link);\r\n        }\r\n\r\n        const cls = [\r\n            classes.Drawer,\r\n            this.props.isOpen ? '' : classes.close\r\n        ]\r\n\r\n        return (\r\n            <>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks()}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onBackdropClick={this.props.onBackdropClick}/> : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer;","import React, { Component } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MenuToggle from './../../components/Navigation/MenuToggle/MenuToggle';\r\nimport Drawer from './../../components/Navigation/Drawer/Drawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        menu: false\r\n    }\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        });\r\n    }\r\n\r\n    backDropClickHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n\r\n                <Drawer isOpen={this.state.menu} onBackdropClick={this.backDropClickHandler}/>\r\n\r\n                <MenuToggle \r\n                    isOpen={this.state.menu}\r\n                    onToggle={this.toggleMenuHandler}\r\n                />\r\n\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if(props.state) {\r\n        cls.push(classes[props.state]);\r\n    }\r\n\r\n    return (\r\n        <li className={cls.join(' ')} onClick={() => props.onAnswerClick(props.answer.id)}>\r\n            {props.answer.text}\r\n        </li>\r\n    )\r\n\r\n}\r\n\r\nexport default AnswerItem","import React from 'react';\r\nimport classes from './AnswersList.module.css';\r\nimport AnswerItem from './AnswerItem/AnswerItem';\r\n\r\nconst AnswersList = props => (\r\n    <ul className={classes.AnswersList}>\r\n        {props.answers.map((answer, i) => <AnswerItem \r\n            key={i} \r\n            answer={answer} \r\n            onAnswerClick={props.onAnswerClick}\r\n            state={props.state  ? props.state[answer.id] : null}\r\n            />)\r\n        }\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList;","import React from 'react';\r\nimport classes from './ActiveQuiz.module.css';\r\nimport AnswersList from './AnswersList/AnswersList';\r\n\r\n\r\nconst ActiveQuiz = props => {\r\n    return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n                <span>\r\n                    <strong>{props.answerNumber}.</strong>&nbsp;\r\n                    {props.question}\r\n                </span>\r\n                <small>{props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n            <AnswersList \r\n                answers={props.answers} \r\n                onAnswerClick={props.onAnswerClick}\r\n                state={props.state}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActiveQuiz;","import React from 'react';\r\nimport classes from './FinishQuizListItem.module.css';\r\n\r\nconst FinishQuizListItem = props => (\r\n    <li className={classes.FinishQuizListItem}>\r\n        <strong>{props.index + 1}</strong>.&nbsp;\r\n            {props.question}\r\n        <i className={props.iconCls} />\r\n    </li>\r\n)\r\n\r\nexport default FinishQuizListItem;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport classes from './FinishQuizList.module.css';\r\nimport FinishQuizListItem from './FinishQuizListItem/FinishQuizListItem';\r\nimport Button from './../../UI/Button/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst FinishQuizList = props => {\r\n    let rightAnswer = 0;\r\n\r\n    return (\r\n        <ul className={classes.FinishQuizList}>\r\n            {props.quiz.map((quiz, i) => {\r\n                const cls = [\r\n                    'fa',\r\n                    props.results[quiz.id] === 'error' ? 'fa-times': 'fa-check',\r\n                    classes[props.results[quiz.id]]\r\n                ];\r\n\r\n                rightAnswer += props.results[quiz.id] === 'error' ? 0 : 1;\r\n              \r\n                return (\r\n                    <FinishQuizListItem key={i} index={i} question={quiz.question} iconCls={cls.join(' ')}/>\r\n                )\r\n            })}\r\n\r\n            <p>Правильно {rightAnswer} из {props.quiz.length}</p>\r\n            <div>\r\n                <Button onClick={props.onRetryClick} type='primary'>Повторить</Button>\r\n                <Link to='/'>\r\n                    <Button type='success'>перейти в список тестов</Button>\r\n                </Link>\r\n            </div>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default FinishQuizList;","import React from 'react';\r\nimport classes from './FinishQuiz.module.css';\r\nimport FinishQuizList from './FinishQuizList/FinishQuizList';\r\n\r\nconst FinishQuiz = (props) => {\r\n    return (\r\n        <div className={classes.FinishQuiz}>\r\n            <FinishQuizList results={props.results} quiz={props.quiz} onRetryClick={props.onRetryClick}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishQuiz;\r\n","import React from 'react';\r\nimport classes from './Loader.module.css';\r\nconst Loader = props => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader}>\r\n            <div /><div />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Loader","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-35da0.firebaseio.com/'\r\n});","import axios from './../../axios/axios-quiz';\r\nimport { \r\n    FETCH_QUIZES_START, \r\n    FETCH_QUIZES_SUCCESS, \r\n    FETCH_QUIZES_ERROR, \r\n    FETCH_QUIZ_SUCCESS, \r\n    QUIZ_SET_STATE, \r\n    QUIZ_FINISH, \r\n    QUIZ_NEXT_QUESTION,\r\n    QUIZ_RETRY_CLICK\r\n } from './actionTypes';\r\n\r\nexport function fetchQuizes() {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart());\r\n          try{\r\n            const {data} = await axios.get('quizes.json');\r\n    \r\n            const quizes = []\r\n            Object.keys(data).forEach((key, i)  => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Test №${i + 1}`\r\n                });\r\n            });\r\n            dispatch(fetchQuizesSuccess(quizes))\r\n        } catch (err) {\r\n            dispatch(fetchQuizesError(err)) //\r\n            console.error(err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizeById(quizId) {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart());\r\n        try {\r\n            const {data} = await axios.get('quizes/' + quizId + '.json');\r\n            let quiz = [];\r\n    \r\n            Object.keys(data).forEach(key => {\r\n                quiz.push(data[key]);\r\n            });\r\n    \r\n            dispatch(fetchQuizSuccess(quiz))\r\n        } catch (err) {\r\n           dispatch(fetchQuizesError(err))\r\n        } \r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState, results\r\n    }\r\n}\r\n\r\nexport function quizFinish() {\r\n    return {\r\n        type: QUIZ_FINISH\r\n    }\r\n}\r\n\r\nexport function quizNextQuestion(activeQuestion) {\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        activeQuestion\r\n    }\r\n}\r\n\r\nexport function onAnswerClickHandler(answerId) {\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz;\r\n        if(state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]; \r\n            if(state.answerState[key] === 'success') {\r\n                return;\r\n            }\r\n        }\r\n\r\n        const results = state.results;\r\n        const question = state.quiz[state.activeQuestion];\r\n\r\n        if(answerId === question.rightAnswerId) {\r\n           if(!results[question.id]) {\r\n               results[question.id] = 'success'\r\n           }\r\n\r\n           dispatch(quizSetState({[answerId]: 'success'}, results))\r\n\r\n\r\n            const timeout = window.setTimeout(() => {\r\n                if(isQuizFinish(state)) {\r\n                    dispatch(quizFinish())\r\n                } else {\r\n                    dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000);\r\n        } else {\r\n            results[question.id] = 'error';\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n        }\r\n    }\r\n}\r\n\r\nexport function onRetryClickHandler() {\r\n    return {\r\n        type: QUIZ_RETRY_CLICK\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        quiz\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function fetchQuizesError(error) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error\r\n    }\r\n}\r\n\r\nfunction isQuizFinish(state) {\r\n    return state.activeQuestion + 1 === state.quiz.length\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\n\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\r\nexport const QUIZ_FINISH  = 'QUIZ_FINISH';\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\r\nexport const QUIZ_RETRY_CLICK = 'QUIZ_RETRY_CLICK';\r\n\r\nexport const QUIZCREATE_SUBMIT_QUIZ_SUCCESS = 'QUIZCREATE_SUBMIT_QUIZ_SUCCESS';\r\nexport const QUIZCREATE_SUBMIT_QUIZ_ERROR = 'QUIZCREATE_SUBMIT_QUIZ_ERROR';\r\nexport const QUIZCREATE_ADD_QUESTION_CLICK = 'QUIZCREATE_ADD_QUESTION_CLICK';\r\nexport const QUIZCREATE_CHANGE_INPUT = 'QUIZCREATE_CHANGE_INPUT';\r\nexport const QUIZCREATE_CHANGE_SELECT = 'QUIZCREATE_CHANGE_SELECT';\r\n\r\nexport const AUTH_LOGIN_CLICK = 'AUTH_LOGIN_CLICK';\r\nexport const AUTH_CHANGE_INPUT = 'AUTH_CHANGE_INPUT';","import React, { Component } from 'react';\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from './../../components/ActiveQuiz/ActiveQuiz';\r\nimport FinishQuiz from './../../components/FinishQuiz/FinishQuiz';\r\nimport Loader from './../../components/UI/Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport { fetchQuizeById, onAnswerClickHandler,  onRetryClickHandler} from './../../store/actions/quiz';\r\n\r\nclass Quiz extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchQuizeById(this.props.match.params.id);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.onRetryClickHandler();\r\n    }\r\n\r\n    checkQuizIsFinish() {\r\n        const activeQuestion = this.props.activeQuestion;\r\n\r\n        if(this.props.isFinished) {\r\n            return  <FinishQuiz \r\n                        results={this.props.results}\r\n                        quiz={this.props.quiz}\r\n                        onRetryClick={this.props.onRetryClickHandler}\r\n                    />\r\n        } else {\r\n            return <ActiveQuiz \r\n                answers={this.props.quiz[activeQuestion].answers} \r\n                question={this.props.quiz[activeQuestion].question}\r\n                onAnswerClick={this.props.onAnswerClickHandler}\r\n                quizLength={this.props.quiz.length}\r\n                answerNumber={this.props.activeQuestion + 1}\r\n                state={this.props.answerState}\r\n            />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}> \r\n                <div className={classes.QuizWrapper}>\r\n                <h1>Ответьте на все вопросы</h1>\r\n                {\r\n                    this.props.isLoading && !this.props.quiz\r\n                        ? <Loader />\r\n                        : this.checkQuizIsFinish()\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        isLoading: state.quiz.isLoading,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n\t\tquiz: state.quiz.quiz,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizeById: id => dispatch(fetchQuizeById(id)),\r\n        onAnswerClickHandler: answerId => dispatch(onAnswerClickHandler(answerId)),\r\n        onRetryClickHandler: () => dispatch(onRetryClickHandler())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched;\r\n}\r\n\r\nconst Input = props => {\r\n    const cls = [classes.Input];\r\n    const htmlFor = `${props.Type}-${Math.random()}`;\r\n\r\n    if(isInvalid(props)) {\r\n        cls.push(classes.invalid);\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input\r\n                type={props.type || 'text'} \r\n                id={htmlFor}\r\n                required={props.required || false}\r\n                value={props.value || ''}\r\n                placeholder={props.placeholder || ''}\r\n                onChange={props.onChange}\r\n            />\r\n            {isInvalid(props)\r\n                ? <span>{props.errorMessage || `Введите верное значение ${props.label}`}</span>\r\n                : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input;","import {FETCH_QUIZES_ERROR, AUTH_LOGIN_CLICK, AUTH_CHANGE_INPUT} from './actionTypes';\r\nimport axios from './../../axios/axios-quiz';\r\nimport { store } from './../../index';\r\n\r\nexport function onClickLoginHandler() {\r\n    return async (dispatch, getState) => {\r\n        const state = getState().auth;\r\n        const API_KEY = \"AIzaSyCSzer3p8FxV722uRTlFfqiG79a6GxG-2k\";\r\n\r\n        let {email, password} = state.formControls;\r\n    \r\n        const authData = {\r\n            email: email.value, \r\n            password: password.value, \r\n            returnSecureToken: true\r\n        }\r\n    \r\n        try {\r\n            const response  = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`, authData);\r\n            dispatch(authLoginClick(response.data));\r\n        } catch (err) {\r\n            dispatch(fetchError(err));\r\n        }\r\n    }\r\n}\r\n\r\nexport function onClickRegisterHandler() {\r\n    return async (dispatch, getState) => {\r\n        const state = getState().auth;\r\n        const API_KEY = \"AIzaSyCSzer3p8FxV722uRTlFfqiG79a6GxG-2k\";\r\n\r\n        let {email, password} = state.formControls;\r\n\r\n        const authData = {\r\n            email: email.value, \r\n            password: password.value, \r\n            returnSecureToken: true\r\n        }\r\n\r\n        try {\r\n            await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`, authData);\r\n\r\n            const responseSignIn  = await axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`, authData);\r\n\r\n            dispatch(authLoginClick(responseSignIn.data));\r\n        } catch (err) {\r\n            dispatch(fetchError(err));\r\n        }\r\n    }\r\n}\r\n\r\nexport function onChangeInputHandler (event, controlName) {\r\n    const state = store.getState().auth;\r\n    const formControls = {...state.formControls}\r\n    const control = {...formControls[controlName]}\r\n\r\n    control.value = event.target.value;\r\n    control.touched = true;\r\n    control.valid = validateControl(control.value, control.validation);\r\n    formControls[controlName] = control;\r\n\r\n    let isFormValid = true;\r\n\r\n    Object.keys(formControls).forEach(name => {\r\n        isFormValid = formControls[name].valid && isFormValid;\r\n    });\r\n\r\n\r\n    return authChangeInput(formControls, isFormValid);\r\n}\r\n\r\nfunction validateControl(value, validation) {\r\n    if(!validation) return true;\r\n\r\n    let isValid = true;\r\n\r\n    if(validation.required) {\r\n        isValid = value.trim !== '' && isValid;\r\n    }\r\n\r\n    if(validation.email) {\r\n        isValid = validateEmail(value)  && isValid;\r\n    }\r\n\r\n    if(validation.minLength) {\r\n        isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nfunction validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\n\r\nfunction fetchError(error) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error\r\n    }\r\n}\r\n\r\nfunction authLoginClick(data) {\r\n    return {\r\n        type: AUTH_LOGIN_CLICK,\r\n        data\r\n    }\r\n}\r\n\r\nfunction authChangeInput(formControls, isFormValid) {\r\n    return {\r\n        type: AUTH_CHANGE_INPUT,\r\n        formControls, isFormValid\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport classes from './Auth.module.css';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Input from './../../components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport { onClickLoginHandler,  onClickRegisterHandler, onChangeInputHandler} from './../../store/actions/auth';\r\n\r\n\r\nclass Auth extends Component {\r\n    onSubmitFormHandler = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.props.formControls).map((controlName, i) => {\r\n            const control = this.props.formControls[controlName];\r\n            return (\r\n                <Input \r\n                    key={controlName + i} \r\n                    type={control.type}\r\n                    value={control.value}\r\n                    placeholder={control.placeholder}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    required={control.required}\r\n                    label={control.label}\r\n                    errorMessage={control.errorMessage}\r\n                    shouldValidate={Boolean(control.validation)}\r\n                    onChange={event => this.props.onChangeInputHandler(event, controlName)}\r\n                />\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}> \r\n                <div> \r\n                    <h1>Авторизация</h1>\r\n                    <form className={classes.AuthForm} onSubmit={this.onSubmitFormHandler}>\r\n                        {this.renderInputs()}\r\n                        <Button type=\"success\" disabled={!this.props.isFormValid} onClick={this.props.onClickLoginHandler}>Войти</Button>\r\n                        <Button type=\"primary\" disabled={!this.props.isFormValid} onClick={this.props.onClickRegisterHandler} >Зарегистрироваться</Button>\r\n                        {this.props.error ? <span>Пароль или email не верный</span> : null}\r\n                        {this.props.signIn ? <span>Вы успешно авторизовались</span> : null}\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isFormValid: state.auth.isFormValid,\r\n        formControls: state.auth.formControls, \r\n        signIn: state.auth.signIn,\r\n        error: state.auth.error\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onClickLoginHandler: () => dispatch(onClickLoginHandler()),\r\n        onClickRegisterHandler: () => dispatch(onClickRegisterHandler()),\r\n        onChangeInputHandler: (event, controlName) => dispatch(onChangeInputHandler(event, controlName)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)","import React from 'react';\r\nimport classes from './Select.module.css';\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n                <select\r\n                    id={htmlFor}\r\n                    value={props.value}\r\n                    onChange={props.onChangeSelect}\r\n                >  {\r\n                    props.options.map((option, i) => {\r\n                        return (\r\n                            <option \r\n                                key={option.value + i} \r\n                                value={option.value || ''}>\r\n                                    {option.text}\r\n                            </option>\r\n                        )\r\n                    })\r\n                }\r\n                </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select;","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if(!validation) return true;\r\n\r\n    let isValid = true;\r\n\r\n    if(validation.required) {\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    return isValid;\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true;\r\n\r\n    Object.keys(formControls).forEach((control) => {\r\n        isFormValid = formControls[control].valid && isFormValid;\r\n    });\r\n        \r\n    return isFormValid\r\n}","import { QUIZCREATE_SUBMIT_QUIZ_SUCCESS, QUIZCREATE_SUBMIT_QUIZ_ERROR,  QUIZCREATE_ADD_QUESTION_CLICK, QUIZCREATE_CHANGE_INPUT,  QUIZCREATE_CHANGE_SELECT} from './actionTypes';\r\nimport axios from './../../axios/axios-quiz';\r\nimport { store } from './../../index';\r\nimport { validateForm, validate } from './../../form/FormLibrary';\r\n\r\n\r\nexport function onClickCreateQuizHandler() {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const state = getState().createQuiz;\r\n            console.log(state)\r\n            await axios.post('quizes.json', JSON.stringify(state.quiz));\r\n            \r\n            dispatch(submitQuizCreateSuccess())\r\n            \r\n        } catch(e) {\r\n            console.error(e)\r\n            dispatch(submitQuizCreateError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function onClickAddQuestionHandler() {\r\n    const state = store.getState().createQuiz;\r\n    const quiz = [...state.quiz];\r\n    const index = quiz.length + 1;\r\n\r\n    const {question, option1, option2, option3, option4} = state.formControls;\r\n\r\n    const questionItem = {\r\n        question: question.value, \r\n        id: index,\r\n        rightAnswerId: state.rightAnswerId,\r\n        answers: [\r\n            {text: option1.value, id: option1.id},\r\n            {text: option2.value, id: option2.id},\r\n            {text: option3.value, id: option3.id},\r\n            {text: option4.value, id: option4.id}\r\n        ]\r\n    }\r\n\r\n    quiz.push(questionItem);\r\n\r\n\r\n   return clickAddQuestion(quiz);\r\n}\r\n\r\nexport function onChangeInputHandler (value, controlName) {\r\n    const state = store.getState().createQuiz;\r\n    const formControls = {...state.formControls}\r\n    const control = {...formControls[controlName]}\r\n\r\n    control.touched = true;\r\n    control.value = value;\r\n    control.valid = validate(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    return  changeInput(formControls, validateForm(formControls))\r\n}\r\n\r\nexport function onChangeSelectHandler (event) {\r\n    return {\r\n        type: QUIZCREATE_CHANGE_SELECT,\r\n        rightAnswerId: +event.target.value\r\n    }\r\n}\r\n\r\nfunction submitQuizCreateSuccess() {\r\n    return {\r\n        type: QUIZCREATE_SUBMIT_QUIZ_SUCCESS\r\n    }\r\n}\r\n\r\nfunction submitQuizCreateError(error) { \r\n    return {\r\n        type: QUIZCREATE_SUBMIT_QUIZ_ERROR,\r\n        error\r\n    }\r\n}\r\n\r\nfunction changeInput(formControls, isFormValid) {\r\n    return {\r\n        type: QUIZCREATE_CHANGE_INPUT,\r\n        formControls, isFormValid\r\n    }\r\n}\r\n\r\nfunction clickAddQuestion(quiz) {\r\n    return {\r\n        type: QUIZCREATE_ADD_QUESTION_CLICK,\r\n        quiz\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport classes from './QuizCreator.module.css';\r\nimport Button from './../../components/UI/Button/Button';\r\nimport Input from './../../components/UI/Input/Input';\r\nimport Select from '../../components/UI/Select/Select';\r\nimport {connect} from 'react-redux';\r\nimport { onClickCreateQuizHandler, onClickAddQuestionHandler,  onChangeInputHandler, onChangeSelectHandler} from './../../store/actions/createQuiz';\r\n\r\nclass QuizCreator extends Component {\r\n    renderInputs() {\r\n        return Object.keys(this.props.formControls).map((controlName, i) => {\r\n            const control = this.props.formControls[controlName];\r\n            return (\r\n                <React.Fragment key={controlName + i} >\r\n                    <Input \r\n                        type={control.type}\r\n                        value={control.value}\r\n                        placeholder={control.placeholder}\r\n                        valid={control.valid}\r\n                        touched={control.touched}\r\n                        label={control.label}\r\n                        errorMessage={control.errorMessage}\r\n                        shouldValidate={Boolean(control.validation)}\r\n                        onChange={event => this.props.onChangeInputHandler(event.target.value, controlName)}\r\n                    />\r\n                    {i === 0 ? <hr/>: null}\r\n                </React.Fragment>\r\n            )\r\n        });\r\n    }\r\n\r\n    onSubmitFormHandler(event) {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        const select = <Select \r\n            label='Выберете правильный ответ'\r\n            value={this.props.rightAnswerId}\r\n            onChangeSelect={this.props.onChangeSelectHandler}\r\n            options={[\r\n                {text: 1, value: 1},\r\n                {text: 2, value: 2},\r\n                {text: 3, value: 3},\r\n                {text: 4, value: 4}\r\n            ]}\r\n        />\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n                    <form onSubmit={event => this.onSubmitFormHandler(event)}>\r\n                        {this.renderInputs()}\r\n                        {select}\r\n                        <Button type=\"primary\" disabled={!this.props.isFormValid} onClick={this.props.onClickAddQuestionHandler}>Добавить вопрос</Button>\r\n                        <Button type=\"success\" disabled={this.props.quiz.length === 0} onClick={this.props.onClickCreateQuizHandler}>Создать тест</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.createQuiz.quiz,\r\n        isFormValid: state.createQuiz.isFormValid,\r\n        rightAnswerId: state.createQuiz.rightAnswerId,\r\n        formControls: state.createQuiz.formControls\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        onClickCreateQuizHandler: () => dispatch(onClickCreateQuizHandler()),\r\n        onClickAddQuestionHandler: () => dispatch(onClickAddQuestionHandler()),\r\n        onChangeInputHandler: (value, controlName) => dispatch(onChangeInputHandler(value, controlName)),\r\n        onChangeSelectHandler: (event) => dispatch(onChangeSelectHandler(event)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import React, { Component } from 'react';\r\nimport classes from './QuizList.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport Loader from '../../components/UI/Loader/Loader';\r\nimport { connect } from 'react-redux';\r\nimport {fetchQuizes} from './../../store/actions/quiz';\r\n\r\nclass QuizList extends Component {\r\n    renderQuizes () {\r\n        return this.props.quizes.map((quiz, i) => {\r\n            return (\r\n                <li key={quiz.id}>\r\n                    <NavLink to={'quiz/' + quiz.id}>\r\n                        {i+1}.&nbsp;{quiz.name}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n               <div>\r\n                   <h1>Список тестов</h1>\r\n                    {\r\n                    this.props.isLoading \r\n                        ? <Loader /> \r\n                        : <ul>\r\n                            {this.renderQuizes()}\r\n                          </ul>\r\n                    }\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        isLoading: state.quiz.isLoading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);","import React from 'react';\nimport Layout from './hoc/Layout/Layout';\nimport Quiz from './containers/Quiz/Quiz';\nimport {Route, Switch, Redirect} from 'react-router-dom';\nimport Auth from './containers/Auth/Auth';\nimport QuizCreator from './containers/QuizCreator/QuizCreator';\nimport QuizList from './containers/QuizList/QuizList';\nimport { store } from './index';\n\nfunction App() {\n\tconst state = store.getState();\n\n\treturn (\n        <Layout>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={QuizList}></Route>\n\t\t\t\t<Route path=\"/auth\" component={Auth}></Route>\n\t\t\t\t{state.auth.signIn ? <Route path=\"/quiz-creator\" component={QuizCreator}></Route> : null}\n\t\t\t\t<Route path=\"/quiz/:id\" component={Quiz}></Route>\n\t\t\t\t<Redirect to=\"/\" />\n\t\t\t</Switch>\n\t\t</Layout>\n  \t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { \r\n    FETCH_QUIZES_START, \r\n    FETCH_QUIZES_ERROR, \r\n    FETCH_QUIZES_SUCCESS, \r\n    FETCH_QUIZ_SUCCESS, \r\n    QUIZ_SET_STATE, \r\n    QUIZ_FINISH, \r\n    QUIZ_NEXT_QUESTION,\r\n    QUIZ_RETRY_CLICK\r\n} from './../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    isLoading: true,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null,\r\n}\r\n\r\n\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            }\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                quiz: action.quiz\r\n            }\r\n        case QUIZ_SET_STATE: \r\n            return {\r\n                ...state,\r\n                answerState: action.answerState, \r\n                results: action.results\r\n            }\r\n        case QUIZ_FINISH: \r\n            return {\r\n                ...state,\r\n                isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION: \r\n            return {\r\n                ...state,\r\n                activeQuestion: action.activeQuestion,\r\n                answerState: null\r\n            }\r\n        case QUIZ_RETRY_CLICK: \r\n            return {\r\n                ...state,\r\n                isFinished: false,\r\n                activeQuestion: 0,\r\n                results: {}, \r\n                answerState: null\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}","import {createControl} from './../../form/FormLibrary';\r\nimport {QUIZCREATE_SUBMIT_QUIZ_SUCCESS, QUIZCREATE_SUBMIT_QUIZ_ERROR, QUIZCREATE_ADD_QUESTION_CLICK, QUIZCREATE_CHANGE_INPUT, QUIZCREATE_CHANGE_SELECT}from './../actions/actionTypes';\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n        label: `Вариант ${number}`,\r\n        errorMessage: 'Значение не может быть пустым',\r\n        id: number\r\n    }, {required: true});\r\n}\r\n\r\nfunction initFormControl() {\r\n    return {\r\n        question: createControl({\r\n            label: 'Введите вопрос',\r\n            errorMessage: 'Введите не может быть пустым',     \r\n        }, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4)\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    quiz: [],\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    error: null,\r\n    formControls: initFormControl()\r\n}\r\n\r\nexport default function createQuizReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case QUIZCREATE_SUBMIT_QUIZ_SUCCESS:\r\n            return {\r\n                ...state,\r\n                quiz: [],\r\n                isFormValid: false,\r\n                rightAnswerId: 1,\r\n                formControls: initFormControl()\r\n            }\r\n        case QUIZCREATE_SUBMIT_QUIZ_ERROR: \r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            }\r\n        case QUIZCREATE_ADD_QUESTION_CLICK: \r\n            return {\r\n                ...state,\r\n                quiz: action.quiz,\r\n                isFormValid: false,\r\n                rightAnswerId: 1,\r\n                formControls: initFormControl()\r\n            }\r\n        case QUIZCREATE_CHANGE_INPUT: \r\n            return {\r\n                ...state,\r\n                formControls: action.formControls,\r\n                isFormValid: action.isFormValid\r\n            }\r\n        case QUIZCREATE_CHANGE_SELECT: \r\n            return {\r\n                ...state,\r\n                rightAnswerId: action.rightAnswerId\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { FETCH_QUIZES_ERROR, AUTH_LOGIN_CLICK,  AUTH_CHANGE_INPUT} from './../actions/actionTypes';\r\nfunction initFormControl() {\r\n    return {\r\n        email: {\r\n            value: '',\r\n            type: 'email',\r\n            label: 'Email',\r\n            required: true, \r\n            placeholder: 'Введите email',\r\n            errorMessage: 'Введите корректный email',\r\n            valid: false,\r\n            touched: false,\r\n            validation: {\r\n                required: true,\r\n                email: true,\r\n            }\r\n        },\r\n        password: {\r\n            value: '',\r\n            type: 'password',\r\n            label: 'Пароль',\r\n            required: true, \r\n            placeholder: 'Введите Пароль',\r\n            errorMessage: 'Введите корректный пароль',\r\n            valid: false,\r\n            touched: false,\r\n            validation: {\r\n                required: true,\r\n                minLength: 6,\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst initialState = {\r\n    isFormValid: false,\r\n    error: null,\r\n    signIn: null,\r\n    formControls: initFormControl()\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_LOGIN_CLICK:\r\n            return {\r\n                ...state,\r\n                signIn: action.data,\r\n                isFormValid: false,\r\n                error: null,\r\n                formControls: initFormControl()\r\n            }\r\n        case AUTH_CHANGE_INPUT: \r\n            return {\r\n                ...state,\r\n                isFormValid: action.isFormValid,\r\n                formControls: action.formControls\r\n            }\r\n        case FETCH_QUIZES_ERROR: \r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport quizReducer from './quiz';\r\nimport createQuizReducer from './createQuiz';\r\nimport authReducer from './auth'\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    createQuiz: createQuizReducer,\r\n    auth: authReducer\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport ReduxThunk from 'redux-thunk';\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\n\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(ReduxThunk)));\n\nconst app = (\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>\n)\n\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}